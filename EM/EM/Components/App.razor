
<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="EM Academy - Protecto de grado de Esterlin Minyetty"/>
    <meta name="author" content="EM Academy Team" />
    <base href="/" />
    <link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["EM.styles.css"]" />
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="InteractiveServer"/>
    <RadzenTheme Theme="@_theme" @rendermode="InteractiveServer"></RadzenTheme>
</head>

<body>
@if (_logeado)
{
    <Routes/>
}
else
{
    <NoLoggedRoutes/>
}
<script src="_framework/blazor.web.js"></script>
<script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Colors).Assembly.GetName().Version)"></script>
<script>
        function setThemeBasedOnSystem() {
            const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)").matches;
            const theme = prefersDarkScheme ? "standard-dark" : "standard";
            localStorage.setItem("theme", theme);
            document.cookie = `theme=${theme}; path=/; max-age=${60 * 60 * 24 * 365}`;
        }

        setThemeBasedOnSystem();
    </script>
</body>

</html>

@code {
    private string _theme = "material";

    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    [Inject]
    private ThemeService? ThemeService { get; set; }

    bool _logeado = false;

    protected override void OnInitialized()
    {
        
        base.OnInitialized();

        if (HttpContext != null)
        {
            var theme = HttpContext.Request.Cookies["theme"];

            if (!string.IsNullOrEmpty(theme))
            {
                ThemeService?.SetTheme(theme, false);
            }
            if (HttpContext.User.Identity != null && HttpContext.User.Identity.IsAuthenticated)
            {
                _logeado = true;
            }
        }
    }
}


