@page "/Marcas"
@rendermode InteractiveServer
@inject IMarcaRepositorio MarcasRepositorio
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@attribute [Authorize(Roles = "Usuario,Admin")]
<PageTitle>Marcas</PageTitle>

<RadzenCard>
    <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
        <h3>Marcas</h3>
        <RadzenButton Size="ButtonSize.Medium" Variant="Variant.Outlined" class="rz-info" ButtonType="ButtonType.Button"
                      Icon="add" Text="Crear"
                      Click='() => { NavigationManager.NavigateTo("/Marcas/Crear"); }'/>
    </RadzenRow>
    <br/>
    <RadzenDataGrid TItem="Marca" AllowPaging="true" PageSize="10" Data="@_marcas">
        <Columns>
            <RadzenDataGridColumn TItem="Marca" Property="Id" Title="ID"/>
            <RadzenDataGridColumn TItem="Marca" Property="Descripcion" Title="Nombre"/>
            <RadzenDataGridColumn TItem="Marca" Title="Opciones">
                <Template Context="diciplina">
                    <RadzenButton Variant="Variant.Outlined" class="rz-info" ButtonType="ButtonType.Button" Icon="edit"
                                  Click='() => { NavigationManager.NavigateTo($"/Marcas/editar/{diciplina.Id}"); }'
                                  Text="Editar"/>
                   <RadzenButton Variant="Variant.Outlined" class="rz-danger" ButtonType="ButtonType.Button" Icon="delete"
                                  Click=@(args => DialogService.Confirm("EstÃ  seguro que quiere eliminar esta marca? Esta accion no es reversible", "Eliminar marca", new ConfirmOptions() { OkButtonText = "Si", CancelButtonText = "No" })
                                      .ContinueWith(async task =>
                                      {
                                          if (task.Result == true)
                                          {
                                              await Delete(diciplina.Id);
                                          }
                                      }))
                                  Text="Eliminar"/>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenCard>

@code {
    List<Marca>? _marcas;

    protected override async Task OnInitializedAsync()
    {
        await GetMarcas();
    }

    private async Task GetMarcas()
    {
        try
        {
            _marcas = await MarcasRepositorio.Get();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
    
    private async Task Delete(int id)
    {
        try
        {
            await MarcasRepositorio.CambiaEstado(id, false);
            await GetMarcas();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}