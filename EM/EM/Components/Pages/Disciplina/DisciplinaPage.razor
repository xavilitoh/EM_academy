@page "/Disciplina"
@attribute [StreamRendering]
@inject IDiciplinaRepositorio DiciplinaRepositorio
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@attribute [Authorize]
<PageTitle>Disciplinas</PageTitle>


<RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
    <h3>Disciplinas</h3>
    <RadzenButton class="rz-info" ButtonType="ButtonType.Button" Size="ButtonSize.Large" Icon="add" Text="Crear" Click='() => { NavigationManager.NavigateTo("/Disciplina/Crear"); }'/>
</RadzenRow>
<br/>
<RadzenDataGrid TItem="Disciplinas" AllowPaging="true" PageSize="10" Data="@_diciplinas">
    <Columns>
        <RadzenDataGridColumn TItem="Disciplinas" Property="Id" Title="ID" />
        <RadzenDataGridColumn TItem="Disciplinas" Property="Descripcion" Title="Nombre" />
        <RadzenDataGridColumn TItem="Disciplinas" Title="Opciones">
            <Template Context="diciplina">
                <RadzenButton class="rz-info" ButtonType="ButtonType.Button" Icon="edit" Click='() => { NavigationManager.NavigateTo($"/Disciplina/editar/{diciplina.Id}"); }' Text="Editar" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {

    List<Disciplinas> _diciplinas;

    protected override async Task OnInitializedAsync()
    {
        _diciplinas = await DiciplinaRepositorio.Get();

    }
}