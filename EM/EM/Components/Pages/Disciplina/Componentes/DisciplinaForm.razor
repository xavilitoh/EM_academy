@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject IJSRuntime JSRuntime

<RadzenTemplateForm Data="@Disciplina">
    <RadzenRow Gap="2rem" class="rz-p-0 rz-p-lg-12" JustifyContent="JustifyContent.Center">
        <RadzenColumn Size="12" SizeMD="12">
            <RadzenStack>
                <RadzenFieldset Text="Formulario de Disciplina">
                    <RadzenStack Gap="1rem">
                        <RadzenRow>
                            <RadzenNumeric hidden="true" @bind-Value="@Disciplina.Id"/>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Component="disciplina" Property="Id" Text="Nombre"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenFormField Text="Nombre" Variant="Variant.Outlined">
                                    <RadzenTextBox Placeholder="Nombre" Style="width: 100%"
                                                   @bind-Value="@Disciplina.Descripcion"/>
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenRequiredValidator Component="disciplina" Property="Descripcion"
                                                     Text="Esto es requerido"/>
                        </RadzenRow>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="1rem"
                 class="rz-mt-8 rz-mb-4">
        <RadzenButton Icon="cancel" ButtonType="ButtonType.Button" class="rz-danger" Click="GoBack" Text="Cancelar"/>
        <RadzenButton Icon="save" ButtonType="ButtonType.Button" class="rz-info" Click="EnviarForm" Text="Guardar"/>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter] public EventCallback<Disciplinas?> Guardar { get; set; }
    [Parameter] public bool EditMode { get; set; }
    [Parameter] public Disciplinas Disciplina { get; set; }
    
    
    override protected async Task OnInitializedAsync()
    {
        

    }
    
    private async Task GoBack()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
    }
    
    private async Task EnviarForm()
    {
        if (string.IsNullOrEmpty(Disciplina?.Descripcion))
        {
            NotificationService.Notify(
                new NotificationMessage
                {
                    Style = "position: absolute; top: -100%; right: 50%;",
                    Severity = NotificationSeverity.Error, 
                    Summary = "Error", 
                    Detail = "La descripci√≥n es requerida", 
                    Duration = 5000
                });
            return;
            
        }
        await Guardar.InvokeAsync(Disciplina);
        NavigationManager.NavigateTo("/Disciplina");
    }
}