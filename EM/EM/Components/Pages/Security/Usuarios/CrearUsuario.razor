@page "/Users/Crear"
@using EM.Data
@using EM.Components.Pages.Security.Componentes
@inject IUsuariosRepositorio RepositorioUsuarios
@rendermode InteractiveServer
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Seguridad")]

<RadzenComponents @rendermode="InteractiveServer" />

<RadzenCard>
    <h3>Nuevo Usuario</h3>

    <UserForm Guardar="Guardar" ApplicationUser="new ApplicationUser()"/>
</RadzenCard>

@code {

    async Task Guardar(ApplicationUser? usuario)
    {
        try
        {
            usuario.UserName = usuario.Email;
            usuario.NormalizedEmail = usuario.Email.ToUpper();
            usuario.NormalizedUserName = usuario.Email.ToUpper();
            usuario.EmailConfirmed = true;
            await RepositorioUsuarios.Save(usuario, usuario.PasswordHash);
            NotificationService.Notify(
                new NotificationMessage
                {
                    Style = "position: absolute; top: -100%; right: 50%;",
                    Severity = NotificationSeverity.Success,
                    Summary = "",
                    Detail = "Registro guardado",
                    Duration = 5000
                });
            NavigationManager.NavigateTo("/users");
        }
        catch (Exception e)
        {
            NotificationService.Notify(
                new NotificationMessage
                {
                    Style = "position: absolute; top: -100%; right: 50%;",
                    Severity = NotificationSeverity.Error,
                    Summary = "",
                    Detail = e.Message,
                    Duration = 5000
                });
        }
    }
}