@page "/TiposUtileria/Crear"
@using EM.Components.Pages.TipoUtileria.Componentes
@inject ITipoUtileriaRepositorio RepositorioTipoUtileria
@rendermode InteractiveServer
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<RadzenComponents @rendermode="InteractiveServer" />

<RadzenCard>
    <h3>Nuevo Tipo de Utiler√≠a</h3>

    <TipoUtileriaForm Guardar="Guardar" TipoUtileria="new TipoUtileria()"/>
</RadzenCard>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    async Task Guardar(TipoUtileria? tipoUtileria)
    {
        try
        {
            if (tipoUtileria != null) await RepositorioTipoUtileria.Save(tipoUtileria);
            NotificationService.Notify(
                new NotificationMessage
                {
                    Style = "position: absolute; top: -100%; right: 50%;",
                    Severity = NotificationSeverity.Success,
                    Summary = "",
                    Detail = "Registro guardado",
                    Duration = 5000
                });
            NavigationManager.NavigateTo("/TiposUtileria");
        }
        catch (Exception e)
        {
            NotificationService.Notify(
                new NotificationMessage
                {
                    Style = "position: absolute; top: -100%; right: 50%;",
                    Severity = NotificationSeverity.Error,
                    Summary = "",
                    Detail = e.Message,
                    Duration = 5000
                });
        }
    }
}